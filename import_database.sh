#!/bin/bash

# Script d'importation du dump Supabase sur le serveur distant
# √Ä ex√©cuter sur le serveur 37.59.121.40

echo "=== SCRIPT D'IMPORTATION SUPABASE ==="
echo ""

# Configuration
DB_NAME="clubcreole_db"
DB_USER="postgres"
DUMP_FILE="/home/ubuntu/dumps/supabase_dump_20251028_164145.sql"

# V√©rification du fichier dump
echo "üîç √âtape 1: V√©rification du fichier dump"
if [ -f "$DUMP_FILE" ]; then
    echo "‚úÖ Fichier dump trouv√©: $DUMP_FILE"
    echo "üìè Taille du fichier: $(du -h $DUMP_FILE | cut -f1)"
    echo "üìÖ Date de modification: $(stat -c %y $DUMP_FILE)"
else
    echo "‚ùå Fichier dump non trouv√©: $DUMP_FILE"
    echo "Veuillez d'abord transf√©rer le fichier avec:"
    echo "mkdir -p /home/ubuntu/dumps"
    echo "cd /home/ubuntu/dumps"
    echo "wget http://172.28.114.141:8888/supabase_dump_20251028_164145.sql"
    exit 1
fi

echo ""
echo "üîç √âtape 2: V√©rification de PostgreSQL"
if command -v psql &> /dev/null; then
    echo "‚úÖ PostgreSQL trouv√©: $(psql --version)"
else
    echo "‚ùå PostgreSQL non trouv√©"
    echo "Installation requise:"
    echo "sudo apt update"
    echo "sudo apt install -y postgresql postgresql-contrib"
    exit 1
fi

# V√©rification du service PostgreSQL
echo ""
echo "üîç √âtape 3: V√©rification du service PostgreSQL"
if systemctl is-active --quiet postgresql; then
    echo "‚úÖ Service PostgreSQL actif"
else
    echo "‚ùå Service PostgreSQL non actif"
    echo "D√©marrage du service:"
    echo "sudo systemctl start postgresql"
    echo "sudo systemctl enable postgresql"
fi

echo ""
echo "üîç √âtape 4: V√©rification de l'utilisateur PostgreSQL"
if sudo -u postgres psql -tAc "SELECT 1 FROM pg_roles WHERE rolname='$DB_USER'" | grep -q 1; then
    echo "‚úÖ Utilisateur $DB_USER existe"
else
    echo "‚ö†Ô∏è  Utilisateur $DB_USER n'existe pas, cr√©ation..."
    echo "sudo -u postgres createuser -s $DB_USER"
fi

echo ""
echo "üóÑÔ∏è  √âtape 5: Cr√©ation de la base de donn√©es"
if sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -qw $DB_NAME; then
    echo "‚úÖ Base de donn√©es $DB_NAME existe d√©j√†"
    echo "‚ö†Ô∏è  Suppression de l'ancienne base de donn√©es..."
    sudo -u postgres dropdb $DB_NAME
fi

echo "üìù Cr√©ation de la base de donn√©es $DB_NAME..."
sudo -u postgres createdb -O $DB_USER $DB_NAME

echo ""
echo "üì• √âtape 6: Importation du dump"
echo "D√©but de l'importation (peut prendre plusieurs minutes)..."

# Commande d'importation
IMPORT_CMD="sudo -u postgres psql -d $DB_NAME -f $DUMP_FILE"

echo "Commande: $IMPORT_CMD"
echo ""

# Ex√©cution de l'importation
if $IMPORT_CMD; then
    echo ""
    echo "‚úÖ Importation r√©ussie !"
else
    echo ""
    echo "‚ùå Erreur lors de l'importation"
    echo "V√©rification des erreurs communes:"
    echo "1. Permissions: sudo chown postgres:postgres $DUMP_FILE"
    echo "2. Encodage: file $DUMP_FILE"
    echo "3. V√©rifier le contenu: head -20 $DUMP_FILE"
    exit 1
fi

echo ""
echo "üîç √âtape 7: V√©rification de l'importation"
echo "Liste des tables import√©es:"
sudo -u postgres psql -d $DB_NAME -c "\dt"

echo ""
echo "Compte des enregistrements par table:"
sudo -u postgres psql -d $DB_NAME -c "
SELECT 
    schemaname,
    tablename,
    n_tup_ins as nombre_enregistrements
FROM pg_stat_user_tables 
ORDER BY n_tup_ins DESC;
"

echo ""
echo "üéâ √âtape 8: Configuration finale"
echo "Base de donn√©es pr√™te !"
echo ""
echo "Informations de connexion:"
echo "- H√¥te: localhost"
echo "- Base: $DB_NAME"
echo "- Utilisateur: $DB_USER"
echo "- Port: 5432"
echo ""
echo "Commande de connexion:"
echo "psql -h localhost -U $DB_USER -d $DB_NAME"